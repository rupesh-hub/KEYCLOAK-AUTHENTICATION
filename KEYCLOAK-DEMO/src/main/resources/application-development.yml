spring:
  datasource:
    jdbcUrl: jdbc:postgresql://localhost:5432/csv_upload_db
    username: postgres
    password: postgres
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800
      leak-detection-threshold: 600000

  second-datasource:
    jdbcUrl: jdbc:postgresql://localhost:5432/keycloak_db
    username: postgres
    password: postgres

    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800
      leak-detection-threshold: 600000
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database: postgresql
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
      format_sql: true
  devtools:
    restart:
      enabled: false
  lifecycle:
    timeout-per-shutdown-phase: 20s
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
mybatis:
  configuration:
    #  specification If the database field is order_id, then the entity field should be written as orderId
    map-underscore-to-camel-case: true
  #Mybatis mapper.xml file location
  mapper-locations: classpath*:**/sql/*.xml
logging:
  level:
    org.jgroups: INFO
    org.infinispan: INFO
    org.keycloak: INFO
    org.keycloak.services.managers.DefaultBruteForceProtector: DEBUG
    org.keycloak.services.scheduled.ClusterAwareScheduledTaskRunner: DEBUG
    org.keycloak.services.managers.UserSessionManager: DEBUG
    org.keycloak.timer.basic: DEBUG

    com:
      zaxxer:
        hikari:
          HikariConfig: DEBUG

server:
  forward-headers-strategy: native
  port: 9999
  servlet:
    context-path: "/"
  shutdown: graceful

keycloak:
  custom:
    server:
      keycloak-path: "/auth"

    infinispan:
      configLocation: "classpath:infinispan.xml"

    adminUser:
      username: admin
      password: admin
      create-admin-user-enabled: true

    migration:
      importProvider: singleFile
      importLocation: keycloak-realm-config.json

  hostname:
    provider: "default"
    default:
      frontendUrl: ""
      adminUrl: ""
      forceBackendUrlToFrontendUrl: false

  admin:
    realm: "master"

  eventsStore:
    provider: "jpa"

  eventsListener:
    "jboss-logging":
      "success-level": "info"
      "error-level": "warn"

  realm:
    provider: "jpa"

  user:
    provider: "jpa"

  userFederatedStorage:
    provider: "jpa"

  userSessionPersister:
    provider: "jpa"

  authorizationPersister:
    provider: "jpa"

  userCache:
    default:
      enabled: true

  timer:
    provider: "basic"

  theme:
    staticMaxAge: "2592000"
    cacheTemplates: true
    cacheThemes: true
    folder:
      dir: ""

  scheduled:
    interval: 900

  connectionsHttpClient:
    default: {}

  connectionsJpa:
    provider: "default"
    default:
      dataSource: "spring/second-datasource"
      initializeEmpty: true
      migrationStrategy: "update"
      showSql: true
      formatSql: true
      globalStatsInterval: -1

  realmCache:
    default:
      enabled: true

  connectionsInfinispan:
    default:
      jgroupsUdpMcastAddr: "234.56.78.90"
      nodeName: "localhost"
      siteName: ""
      clustered: fase
      async: false
      sessionsOwners: 1
      l1Lifespan: 600000
      remoteStoreEnabled: false
      remoteStoreHost: "localhost"
      remoteStorePort: 11222
      hotrodProtocolVersion: ""

  scripting: {}

  "jta-lookup":
    provider: "jboss"
    jboss:
      enabled: true

  "login-protocol":
    "saml":
      "knownProtocols": ["http=${server.port}", "https=${server.port}"]

  "x509cert-lookup":
    provider: "default"
    default:
      enabled: true

      haproxy:
        enabled: true
        sslClientCert: "x-ssl-client-cert"
        sslCertChainPrefix: "x-ssl-client-cert-chain"
        certificateChainLength: 1

      apache:
        enabled: true
        sslClientCert: "x-ssl-client-cert"
        sslCertChainPrefix: "x-ssl-client-cert-chain"
        certificateChainLength: 1

      nginx:
        enabled: true
        sslClientCert: "x-ssl-client-cert"
        sslCertChainPrefix: "x-ssl-client-cert-chain"
        certificateChainLength: 1

